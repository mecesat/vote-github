name: "Build and deploy - action"

on:
  push:
    branches:
      - master

env:
  CLUSTER_NAME: contoso-video
  RESOURCE_GROUP: mslearn-gh-pipelines-5163
  NAMESPACE: ns-voting-app
  IMAGE_NAME: azure-vote-front-github

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout repository"
      uses: actions/checkout@master
      with:
        fetch-depth: 2
    
    - uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: "Build and push to container registry"
      run: |
        docker build . -t ${{ secrets.REGISTRY_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: "Get code from github repo"
      uses: actions/checkout@master

    - name: "Set the target AKS cluster"
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}

    # - name: "Create the namespace if it does not exist"
    #   run: |
    #     kubectl create ns ${{env.NAMESPACE}} --dry-run -o json | kubectl apply -f -

    - name: "Create the namespace"
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/namespace.yml

    - name: "Create container registry image pull secret"
      uses: Azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ secrets.REGISTRY_URL }}
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: acr-secret
        namespace: ${{env.NAMESPACE}}

    - name: "Deploy azure vote back"
      uses: Azure/k8s-deploy@v1
      timeout-minutes: 5
      with:
        namespace: ${{env.NAMESPACE}}
        manifests: |
          manifests/back.yml
          manifests/service-back.yml

    - name: "Deploy azure vote front"
      uses: Azure/k8s-deploy@v1
      timeout-minutes: 5
      with:
        namespace: ${{env.NAMESPACE}}
        manifests: |
          manifests/front.yml
          manifests/service-front.yml
          manifests/ingress.yml
        images: |
          ${{secrets.REGISTRY_URL}}/${{env.IMAGE_NAME}}:${{ github.sha }}
        imagepullsecrets: |
          acr-secret
        strategy: canary
        action: deploy
        traffic-split-method: smi
        percentage: 30
        baseline-and-canary-replicas: 1

    # - name: "If azure deployment was not succeeded"
    #   if: failure()
    #   run: |
    #     kubectl rollout undo deployment/azure-vote-front --namespace ${{env.NAMESPACE}}

  # approve_canary_release:
  #   needs: [deploy]
  #   runs-on: ubuntu-latest
  #   environment: akspromotion
  #   steps:
  #   - run: echo asked for approval

  # promote_or_reject:
  #   needs: [approve_canary_release]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: "Get code from github repo"
  #     uses: actions/checkout@master

  #   - name: "Set the target AKS cluster"
  #     uses: Azure/aks-set-context@v1
  #     with:
  #       creds: '${{ secrets.AZURE_CREDENTIALS }}'
  #       cluster-name: ${{ env.CLUSTER_NAME }}
  #       resource-group: ${{ env.RESOURCE_GROUP }}

  #   - name: "Promote the canary release for azure vote front"
  #     uses: Azure/k8s-deploy@v1
  #     if: ${{ success() }}
  #     timeout-minutes: 5
  #     with:
  #       namespace: ${{env.NAMESPACE}}
  #       manifests: |
  #         manifests/front.yml
  #         manifests/service-front.yml
  #         manifests/ingress.yml
  #       images: |
  #         ${{secrets.REGISTRY_URL}}/${{env.IMAGE_NAME}}:${{ github.sha }}
  #       imagepullsecrets: |
  #         acr-secret
  #       strategy: canary
  #       action: promote
  #       traffic-split-method: smi

  #   - name: "Reject the canary release for azure vote front"
  #     uses: Azure/k8s-deploy@v1
  #     if: ${{ failure() }}
  #     timeout-minutes: 5
  #     with:
  #       namespace: ${{env.NAMESPACE}}
  #       manifests: |
  #         manifests/front.yml
  #         manifests/service-front.yml
  #         manifests/ingress.yml
  #       images: |
  #         ${{secrets.REGISTRY_URL}}/${{env.IMAGE_NAME}}:${{ github.sha }}
  #       imagepullsecrets: |
  #         acr-secret
  #       strategy: canary
  #       action: reject
  #       traffic-split-method: smi